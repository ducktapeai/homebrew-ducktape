name: Credential Scanner

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '**.txt'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Allow manual triggering
  schedule:
    # Run weekly to conserve GitHub Actions minutes
    - cron: '0 0 * * 0'

jobs:
  # Add check to prevent exceeding free tier limits
  check-budget:
    name: Check Actions minutes budget
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - id: check
        name: Check if workflow should run
        run: |
          # For scheduled runs, check if we're close to free tier limit
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "Skipping scheduled scan to conserve GitHub Actions minutes."
          # For PRs from forks, we may want to skip to save minutes
          elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.head.repo.fork }}" == "true" ]]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "Skipping scan for fork PR to conserve minutes. Run manually if needed."
          # Always run for direct pushes and manual triggers
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  credential-scan:
    name: Scan for credentials
    needs: check-budget
    if: needs.check-budget.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # For PRs get full history, otherwise just latest commit
          fetch-depth: ${{ github.event_name == 'pull_request' && '0' || '1' }}

      # Use official gitleaks action for efficient scanning
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG: .github/gitleaks.toml
        continue-on-error: false